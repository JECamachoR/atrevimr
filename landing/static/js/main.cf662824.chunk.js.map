{"version":3,"sources":["components/WithEnd.tsx","components/WithoutEnd.tsx","App.tsx","index.tsx"],"names":["WithEnd","useState","need","setNeed","months","setMonths","vehicle","setVehicle","rate","pmt","normal","toFixed","type","min","step","value","onChange","v","Number","target","WithoutEnd","mensualidad","setMensualidad","pv","App","undefined","setType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKA6CeA,EA3CC,WAAO,IAAD,EAEMC,mBAAS,KAFf,mBAEXC,EAFW,KAELC,EAFK,OAGUF,mBAAS,GAHnB,mBAGXG,EAHW,KAGHC,EAHG,OAIYJ,mBAAiB,GAJ7B,mBAIXK,EAJW,KAIFC,EAJE,KAMZC,EAAOF,EAAU,GAEjBG,EAAMD,GAASN,GAAS,WAAK,EAAIM,EAAOJ,IAExCM,GAAUR,EAAKE,GAAQO,QAAQ,GAErC,OACI,4CAEA,uBACA,uBAAOC,KAAK,SAASC,IAAI,IAAIC,KAAK,MAAMC,MAAOb,EAAMc,SAAU,SAAAC,GAAC,OAAId,EAAQe,OAAOD,EAAEE,OAAOJ,WAC5F,uBACA,uBALA,aAOA,uBACA,uBAAOH,KAAK,SAASC,IAAI,IAAIC,KAAK,MAAMC,MAAOX,EAAQY,SAAU,SAAAC,GAAC,OAAIZ,EAAUa,OAAOD,EAAEE,OAAOJ,WAChG,uBACA,uBAVA,yBAaA,uBACA,yBAAQA,MAAOT,EAASU,SAAU,SAAAC,GAAC,OAAIV,EAAWW,OAAOD,EAAEE,OAAOJ,SAAlE,UACI,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,IAAf,mBACA,wBAAQA,MAAO,IAAf,4BAjBJ,MAkBc,IAAIT,EAlBlB,IAmBA,uBACA,uBApBA,wCAsBmCI,EAtBnC,gBAuBA,uBAvBA,uDAwBqDD,EAAIE,QAAQ,IAAMD,MCMhEU,EA3CI,WAAO,IAAD,EAEiBnB,mBAAS,KAF1B,mBAEdoB,EAFc,KAEDC,EAFC,OAGOrB,mBAAS,KAHhB,mBAGdG,EAHc,KAGNC,EAHM,OAISJ,mBAAiB,GAJ1B,mBAIdK,EAJc,KAILC,EAJK,KAMfC,EAAOF,EAAU,GAEjBiB,EAAKF,GAAe,SAAC,EAAEb,EAAOJ,GAAQ,GAAKI,EAE3CE,GAAUW,EAAYjB,GAAQO,QAAQ,GAE5C,OACI,qDAEA,uBACA,uBAAOC,KAAK,SAASC,IAAI,IAAIC,KAAK,MAAMC,MAAOM,EAAaL,SAAU,SAAAC,GAAC,OAAIK,EAAeJ,OAAOD,EAAEE,OAAOJ,WAC1G,uBACA,uBALA,kBAOA,uBACA,uBAAOH,KAAK,SAASC,IAAI,IAAIC,KAAK,MAAMC,MAAOX,EAAQY,SAAU,SAAAC,GAAC,OAAIZ,EAAUa,OAAOD,EAAEE,OAAOJ,WAChG,uBACA,uBAVA,yBAaA,uBACA,yBAAQA,MAAOT,EAASU,SAAU,SAAAC,GAAC,OAAIV,EAAWW,OAAOD,EAAEE,OAAOJ,SAAlE,UACI,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,IAAf,mBACA,wBAAQA,MAAO,IAAf,4BAjBJ,MAkBc,IAAIT,EAlBlB,IAmBA,uBACA,uBApBA,2BAsBsBI,EACtB,uBAvBA,8CAwByCa,EAAGZ,QAAQ,IAAMD,MCfnDc,MApBf,WAAgB,IAAD,EACavB,wBAA6BwB,GAD1C,mBACJb,EADI,KACEc,EADF,KAGX,OACI,gCACI,yBAAQX,MAAOH,EAAMI,SAAU,SAAAC,GAAC,OAAIS,EAAQT,EAAEE,OAAOJ,QAArD,UACI,wBAAQA,WAAOU,EAAf,sCACA,wBAAQV,MAAM,UAAd,iDACA,wBAAQA,MAAM,OAAd,mDAEJ,uBACA,uBAEAH,IAAmB,SAATA,EACV,cAAC,EAAD,IAAc,cAAC,EAAD,SCd1Be,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf662824.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst WithEnd = () => {\n\n    const [need, setNeed] = useState(10000)\n    const [months, setMonths] = useState(5)\n    const [vehicle, setVehicle] = useState<number>(0)\n\n    const rate = vehicle / 12\n\n    const pmt = rate * (-need) / (1 - (1 + rate)**months)\n\n    const normal = (need/months).toFixed(2)\n\n    return (\n        <form>\n        necesito\n        <br />\n        <input type=\"number\" min=\"1\" step=\"any\" value={need} onChange={v => setNeed(Number(v.target.value))} />\n        <br />\n        <br />\n        en (meses)\n        <br />\n        <input type=\"number\" min=\"1\" step=\"any\" value={months} onChange={v => setMonths(Number(v.target.value))} />\n        <br />\n        <br />\n\n        usando el instrumento:\n        <br />\n        <select value={vehicle} onChange={v => setVehicle(Number(v.target.value))}>\n            <option value={0}>ninguno</option>\n            <option value={0.04}>cetes</option>\n            <option value={0.18}>real estate</option>\n        </select> = {(100*vehicle)}%\n        <br />\n        <br />\n\n        normalmente necesitarías ahorrar ${normal} mensualmente\n        <br />\n        pero por usar este instrumento puedes ahorrar solo ${pmt.toFixed(2) || normal}\n\n    </form>\n    )\n}\n\nexport default WithEnd\n","import React, { useState } from 'react'\n\nconst WithoutEnd = () => {\n\n    const [mensualidad, setMensualidad] = useState(1000)\n    const [months, setMonths] = useState(12*30)\n    const [vehicle, setVehicle] = useState<number>(0)\n\n    const rate = vehicle / 12\n\n    const pv = mensualidad * ((1+rate)**months -1) / rate\n\n    const normal = (mensualidad*months).toFixed(2)\n\n    return (\n        <form>\n        al mes juntaré\n        <br />\n        <input type=\"number\" min=\"1\" step=\"any\" value={mensualidad} onChange={v => setMensualidad(Number(v.target.value))} />\n        <br />\n        <br />\n        durante (meses)\n        <br />\n        <input type=\"number\" min=\"1\" step=\"any\" value={months} onChange={v => setMonths(Number(v.target.value))} />\n        <br />\n        <br />\n\n        usando el instrumento:\n        <br />\n        <select value={vehicle} onChange={v => setVehicle(Number(v.target.value))}>\n            <option value={0}>ninguno</option>\n            <option value={0.04}>cetes</option>\n            <option value={0.18}>real estate</option>\n        </select> = {(100*vehicle)}%\n        <br />\n        <br />\n\n        normalmente tendría ${normal}\n        <br />\n        pero por usar este instrumento tendrás ${pv.toFixed(2) || normal}\n\n    </form>\n    )\n}\n\nexport default WithoutEnd","import React, { useState } from 'react';\nimport WithEnd from './components/WithEnd';\nimport WithoutEnd from './components/WithoutEnd';\n\nfunction App() {\n    const [type, setType] = useState<string | undefined>(undefined)\n\n    return (\n        <div>\n            <select value={type} onChange={v => setType(v.target.value)}>\n                <option value={undefined}>Selecciona una opción</option>\n                <option value=\"without\">Quiero ahorrar una cantidad mensual</option>\n                <option value=\"with\">Quiero llegar a una cantidad total</option>\n            </select>\n            <br />\n            <br />\n        {\n            type && ((type === \"with\") ? \n            <WithEnd /> : <WithoutEnd />)\n        }\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}